'use strict';

const Readable = require('stream').Readable;

// copy-paste from https://github.com/mysqljs/mysql/blob/master/lib/protocol/sequences/Query.js
module.exports = function(command, connectionStream) {
  command.stream = function(options) {
    let stream;

    options = options || {};
    options.objectMode = true;
    (stream = new Readable(options)),
      (stream._read = function() {
        connectionStream.resume();
      });

<<<<<<< HEAD
    this.on('result', (row, i) => {
=======
    this.on('result', function(row, i) {
>>>>>>> 19d16fd3efdfc5b255b1d822e05b7c2aacd7873b
      if (!stream.push(row)) {
        connectionStream.pause();
      }
      stream.emit('result', row, i); // replicate old emitter
    });

<<<<<<< HEAD
    this.on('error', err => {
      stream.emit('error', err); // Pass on any errors
    });

    this.on('end', () => {
      stream.push(null); // pushing null, indicating EOF
    });

    this.on('fields', (fields, i) => {
=======
    this.on('error', function(err) {
      stream.emit('error', err); // Pass on any errors
    });

    this.on('end', function() {
      stream.push(null); // pushing null, indicating EOF
    });

    this.on('fields', function(fields, i) {
>>>>>>> 19d16fd3efdfc5b255b1d822e05b7c2aacd7873b
      stream.emit('fields', fields, i); // replicate old emitter
    });

    return stream;
  };
};
